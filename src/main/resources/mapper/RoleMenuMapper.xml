<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.prtr.ykgc.mapper.RoleMenuMapper">
  <resultMap id="BaseResultMap" type="com.prtr.ykgc.entity.RoleMenu">
    <id column="MENUID" jdbcType="INTEGER" property="menuId" />
    <result column="MENUNAME" jdbcType="VARCHAR" property="menuName" />
    <result column="MENUFATHERID" jdbcType="INTEGER" property="menuFatherId" />
    <result column="URL" jdbcType="VARCHAR" property="url" />
    <result column="ICON" jdbcType="VARCHAR" property="icon" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="SORT" jdbcType="INTEGER" property="sort" />
    <result column="ISINNER" jdbcType="INTEGER" property="isInner" />
    <result column="ISOUTER" jdbcType="INTEGER" property="isOuter" />
    <result column="STATUS" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    MENUID, MENUNAME, MENUFATHERID, URL, ICON, REMARK, SORT, ISINNER, ISOUTER, STATUS
  </sql>
  <select id="selectByExample" parameterType="com.prtr.ykgc.entity.RoleMenuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TB_ROLE_MENU
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from TB_ROLE_MENU
    where MENUID = #{menuId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from TB_ROLE_MENU
    where MENUID = #{menuId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.prtr.ykgc.entity.RoleMenuExample">
    delete from TB_ROLE_MENU
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.prtr.ykgc.entity.RoleMenu">
    insert into TB_ROLE_MENU (MENUID, MENUNAME, MENUFATHERID, 
      URL, ICON, REMARK, 
      SORT, ISINNER, ISOUTER, 
      STATUS)
    values (#{menuId,jdbcType=INTEGER}, #{menuName,jdbcType=VARCHAR}, #{menuFatherId,jdbcType=INTEGER}, 
      #{url,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{isInner,jdbcType=INTEGER}, #{isOuter,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.prtr.ykgc.entity.RoleMenu">
    insert into TB_ROLE_MENU
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="menuId != null">
        MENUID,
      </if>
      <if test="menuName != null">
        MENUNAME,
      </if>
      <if test="menuFatherId != null">
        MENUFATHERID,
      </if>
      <if test="url != null">
        URL,
      </if>
      <if test="icon != null">
        ICON,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="sort != null">
        SORT,
      </if>
      <if test="isInner != null">
        ISINNER,
      </if>
      <if test="isOuter != null">
        ISOUTER,
      </if>
      <if test="status != null">
        STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="menuId != null">
        #{menuId,jdbcType=INTEGER},
      </if>
      <if test="menuName != null">
        #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuFatherId != null">
        #{menuFatherId,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="isInner != null">
        #{isInner,jdbcType=INTEGER},
      </if>
      <if test="isOuter != null">
        #{isOuter,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.prtr.ykgc.entity.RoleMenuExample" resultType="java.lang.Long">
    select count(*) from TB_ROLE_MENU
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update TB_ROLE_MENU
    <set>
      <if test="record.menuId != null">
        MENUID = #{record.menuId,jdbcType=INTEGER},
      </if>
      <if test="record.menuName != null">
        MENUNAME = #{record.menuName,jdbcType=VARCHAR},
      </if>
      <if test="record.menuFatherId != null">
        MENUFATHERID = #{record.menuFatherId,jdbcType=INTEGER},
      </if>
      <if test="record.url != null">
        URL = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null">
        ICON = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        SORT = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.isInner != null">
        ISINNER = #{record.isInner,jdbcType=INTEGER},
      </if>
      <if test="record.isOuter != null">
        ISOUTER = #{record.isOuter,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update TB_ROLE_MENU
    set MENUID = #{record.menuId,jdbcType=INTEGER},
      MENUNAME = #{record.menuName,jdbcType=VARCHAR},
      MENUFATHERID = #{record.menuFatherId,jdbcType=INTEGER},
      URL = #{record.url,jdbcType=VARCHAR},
      ICON = #{record.icon,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      SORT = #{record.sort,jdbcType=INTEGER},
      ISINNER = #{record.isInner,jdbcType=INTEGER},
      ISOUTER = #{record.isOuter,jdbcType=INTEGER},
      STATUS = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.prtr.ykgc.entity.RoleMenu">
    update TB_ROLE_MENU
    <set>
      <if test="menuName != null">
        MENUNAME = #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuFatherId != null">
        MENUFATHERID = #{menuFatherId,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        URL = #{url,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        ICON = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        SORT = #{sort,jdbcType=INTEGER},
      </if>
      <if test="isInner != null">
        ISINNER = #{isInner,jdbcType=INTEGER},
      </if>
      <if test="isOuter != null">
        ISOUTER = #{isOuter,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where MENUID = #{menuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.prtr.ykgc.entity.RoleMenu">
    update TB_ROLE_MENU
    set MENUNAME = #{menuName,jdbcType=VARCHAR},
      MENUFATHERID = #{menuFatherId,jdbcType=INTEGER},
      URL = #{url,jdbcType=VARCHAR},
      ICON = #{icon,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      SORT = #{sort,jdbcType=INTEGER},
      ISINNER = #{isInner,jdbcType=INTEGER},
      ISOUTER = #{isOuter,jdbcType=INTEGER},
      STATUS = #{status,jdbcType=INTEGER}
    where MENUID = #{menuId,jdbcType=INTEGER}
  </update>
</mapper>